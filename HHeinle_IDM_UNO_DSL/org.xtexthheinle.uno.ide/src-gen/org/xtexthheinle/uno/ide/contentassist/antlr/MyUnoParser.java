/*
 * generated by Xtext 2.23.0
 */
package org.xtexthheinle.uno.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtexthheinle.uno.ide.contentassist.antlr.internal.InternalMyUnoParser;
import org.xtexthheinle.uno.services.MyUnoGrammarAccess;

public class MyUnoParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyUnoGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyUnoGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEtat_MainAccess().getAlternatives(), "rule__Etat_Main__Alternatives");
			builder.put(grammarAccess.getNb_MainsAccess().getAlternatives(), "rule__Nb_Mains__Alternatives");
			builder.put(grammarAccess.getNb_Cartes_MainsAccess().getAlternatives(), "rule__Nb_Cartes_Mains__Alternatives");
			builder.put(grammarAccess.getNb_TalonsAccess().getAlternatives(), "rule__Nb_Talons__Alternatives");
			builder.put(grammarAccess.getNb_cartes_jouablesAccess().getAlternatives(), "rule__Nb_cartes_jouables__Alternatives");
			builder.put(grammarAccess.getInterceptionAccess().getAlternatives(), "rule__Interception__Alternatives");
			builder.put(grammarAccess.getNb_cartes_a_piocherAccess().getAlternatives(), "rule__Nb_cartes_a_piocher__Alternatives");
			builder.put(grammarAccess.getJouer_apres_piocheAccess().getAlternatives(), "rule__Jouer_apres_pioche__Alternatives");
			builder.put(grammarAccess.getVainqueur_mancheAccess().getAlternatives(), "rule__Vainqueur_manche__Alternatives");
			builder.put(grammarAccess.getVainqueur_totalAccess().getAlternatives(), "rule__Vainqueur_total__Alternatives");
			builder.put(grammarAccess.getVariante_UNOAccess().getGroup(), "rule__Variante_UNO__Group__0");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getGroup(), "rule__Configuration_Depart__Group__0");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getGroup_5(), "rule__Configuration_Depart__Group_5__0");
			builder.put(grammarAccess.getMainAccess().getGroup(), "rule__Main__Group__0");
			builder.put(grammarAccess.getTalonAccess().getGroup(), "rule__Talon__Group__0");
			builder.put(grammarAccess.getMancheAccess().getGroup(), "rule__Manche__Group__0");
			builder.put(grammarAccess.getMancheAccess().getGroup_2(), "rule__Manche__Group_2__0");
			builder.put(grammarAccess.getMancheAccess().getGroup_3(), "rule__Manche__Group_3__0");
			builder.put(grammarAccess.getMancheAccess().getGroup_8(), "rule__Manche__Group_8__0");
			builder.put(grammarAccess.getMancheAccess().getGroup_10(), "rule__Manche__Group_10__0");
			builder.put(grammarAccess.getMancheAccess().getGroup_11(), "rule__Manche__Group_11__0");
			builder.put(grammarAccess.getCartes_1_9Access().getGroup_2(), "rule__Cartes_1_9__Group_2__0");
			builder.put(grammarAccess.getPiocheAccess().getGroup(), "rule__Pioche__Group__0");
			builder.put(grammarAccess.getFin_MancheAccess().getGroup(), "rule__Fin_Manche__Group__0");
			builder.put(grammarAccess.getPoints_mancheAccess().getGroup(), "rule__Points_manche__Group__0");
			builder.put(grammarAccess.getPerdants_mancheAccess().getGroup(), "rule__Perdants_manche__Group__0");
			builder.put(grammarAccess.getPerdants_mancheAccess().getGroup_2(), "rule__Perdants_manche__Group_2__0");
			builder.put(grammarAccess.getPerdants_mancheAccess().getGroup_2_1(), "rule__Perdants_manche__Group_2_1__0");
			builder.put(grammarAccess.getFin_PartieAccess().getGroup(), "rule__Fin_Partie__Group__0");
			builder.put(grammarAccess.getVariante_UNOAccess().getNameAssignment_1(), "rule__Variante_UNO__NameAssignment_1");
			builder.put(grammarAccess.getVariante_UNOAccess().getConfiguration_departAssignment_3(), "rule__Variante_UNO__Configuration_departAssignment_3");
			builder.put(grammarAccess.getVariante_UNOAccess().getMancheAssignment_4(), "rule__Variante_UNO__MancheAssignment_4");
			builder.put(grammarAccess.getVariante_UNOAccess().getFin_mancheAssignment_5(), "rule__Variante_UNO__Fin_mancheAssignment_5");
			builder.put(grammarAccess.getVariante_UNOAccess().getFin_partieAssignment_6(), "rule__Variante_UNO__Fin_partieAssignment_6");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getMainAssignment_2(), "rule__Configuration_Depart__MainAssignment_2");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getTalonAssignment_3(), "rule__Configuration_Depart__TalonAssignment_3");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getRiviereAssignment_4(), "rule__Configuration_Depart__RiviereAssignment_4");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getTemps_limiteAssignment_5_0(), "rule__Configuration_Depart__Temps_limiteAssignment_5_0");
			builder.put(grammarAccess.getConfiguration_DepartAccess().getSecondesAssignment_5_1(), "rule__Configuration_Depart__SecondesAssignment_5_1");
			builder.put(grammarAccess.getMainAccess().getEtat_mainAssignment_2(), "rule__Main__Etat_mainAssignment_2");
			builder.put(grammarAccess.getMainAccess().getNb_mainsAssignment_5(), "rule__Main__Nb_mainsAssignment_5");
			builder.put(grammarAccess.getMainAccess().getNb_cartes_mainsAssignment_8(), "rule__Main__Nb_cartes_mainsAssignment_8");
			builder.put(grammarAccess.getTalonAccess().getNb_talonsAssignment_2(), "rule__Talon__Nb_talonsAssignment_2");
			builder.put(grammarAccess.getMancheAccess().getInversionAssignment_2_2(), "rule__Manche__InversionAssignment_2_2");
			builder.put(grammarAccess.getMancheAccess().getTourner_les_mainsAssignment_3_2(), "rule__Manche__Tourner_les_mainsAssignment_3_2");
			builder.put(grammarAccess.getMancheAccess().getNb_cartes_jouablesAssignment_6(), "rule__Manche__Nb_cartes_jouablesAssignment_6");
			builder.put(grammarAccess.getMancheAccess().getCartes_1_9Assignment_8_2(), "rule__Manche__Cartes_1_9Assignment_8_2");
			builder.put(grammarAccess.getMancheAccess().getPiocheAssignment_9(), "rule__Manche__PiocheAssignment_9");
			builder.put(grammarAccess.getMancheAccess().getCumulAssignment_10_2(), "rule__Manche__CumulAssignment_10_2");
			builder.put(grammarAccess.getMancheAccess().getContestationsAssignment_11_2(), "rule__Manche__ContestationsAssignment_11_2");
			builder.put(grammarAccess.getInversionAccess().getAvec_carte_inversionAssignment_0(), "rule__Inversion__Avec_carte_inversionAssignment_0");
			builder.put(grammarAccess.getInversionAccess().getAvec_carte_septAssignment_1(), "rule__Inversion__Avec_carte_septAssignment_1");
			builder.put(grammarAccess.getTourner_les_mainsAccess().getAvec_carte_zeroAssignment_0(), "rule__Tourner_les_mains__Avec_carte_zeroAssignment_0");
			builder.put(grammarAccess.getTourner_les_mainsAccess().getAvec_carte_unoAssignment_1(), "rule__Tourner_les_mains__Avec_carte_unoAssignment_1");
			builder.put(grammarAccess.getCartes_1_9Access().getSuitesAssignment_0(), "rule__Cartes_1_9__SuitesAssignment_0");
			builder.put(grammarAccess.getCartes_1_9Access().getSuites_royalesAssignment_1(), "rule__Cartes_1_9__Suites_royalesAssignment_1");
			builder.put(grammarAccess.getCartes_1_9Access().getInterceptionAssignment_2_2(), "rule__Cartes_1_9__InterceptionAssignment_2_2");
			builder.put(grammarAccess.getPiocheAccess().getNb_cartes_a_piocherAssignment_3(), "rule__Pioche__Nb_cartes_a_piocherAssignment_3");
			builder.put(grammarAccess.getPiocheAccess().getJouer_apres_piocheAssignment_5(), "rule__Pioche__Jouer_apres_piocheAssignment_5");
			builder.put(grammarAccess.getCumulAccess().getCumul_plus_2Assignment_0(), "rule__Cumul__Cumul_plus_2Assignment_0");
			builder.put(grammarAccess.getCumulAccess().getCumul_plus_4Assignment_1(), "rule__Cumul__Cumul_plus_4Assignment_1");
			builder.put(grammarAccess.getCumulAccess().getCumul_carte_couleurAssignment_2(), "rule__Cumul__Cumul_carte_couleurAssignment_2");
			builder.put(grammarAccess.getCumulAccess().getCumul_carte_unoAssignment_3(), "rule__Cumul__Cumul_carte_unoAssignment_3");
			builder.put(grammarAccess.getContestationsAccess().getInter_contestableAssignment_0(), "rule__Contestations__Inter_contestableAssignment_0");
			builder.put(grammarAccess.getContestationsAccess().getPlus4_contestableAssignment_1(), "rule__Contestations__Plus4_contestableAssignment_1");
			builder.put(grammarAccess.getFin_MancheAccess().getDire_uno_obligatoireAssignment_2(), "rule__Fin_Manche__Dire_uno_obligatoireAssignment_2");
			builder.put(grammarAccess.getFin_MancheAccess().getPoints_mancheAssignment_3(), "rule__Fin_Manche__Points_mancheAssignment_3");
			builder.put(grammarAccess.getPoints_mancheAccess().getVainqueur_mancheAssignment_3(), "rule__Points_manche__Vainqueur_mancheAssignment_3");
			builder.put(grammarAccess.getPoints_mancheAccess().getPerdants_mancheAssignment_5(), "rule__Points_manche__Perdants_mancheAssignment_5");
			builder.put(grammarAccess.getPerdants_mancheAccess().getPm_zero_ptsAssignment_1(), "rule__Perdants_manche__Pm_zero_ptsAssignment_1");
			builder.put(grammarAccess.getPerdants_mancheAccess().getPm_pts_selon_cartes_restantesAssignment_2_0(), "rule__Perdants_manche__Pm_pts_selon_cartes_restantesAssignment_2_0");
			builder.put(grammarAccess.getFin_PartieAccess().getVainqueur_totalAssignment_4(), "rule__Fin_Partie__Vainqueur_totalAssignment_4");
			builder.put(grammarAccess.getInversionAccess().getUnorderedGroup(), "rule__Inversion__UnorderedGroup");
			builder.put(grammarAccess.getTourner_les_mainsAccess().getUnorderedGroup(), "rule__Tourner_les_mains__UnorderedGroup");
			builder.put(grammarAccess.getCartes_1_9Access().getUnorderedGroup(), "rule__Cartes_1_9__UnorderedGroup");
			builder.put(grammarAccess.getCumulAccess().getUnorderedGroup(), "rule__Cumul__UnorderedGroup");
			builder.put(grammarAccess.getContestationsAccess().getUnorderedGroup(), "rule__Contestations__UnorderedGroup");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyUnoGrammarAccess grammarAccess;

	@Override
	protected InternalMyUnoParser createParser() {
		InternalMyUnoParser result = new InternalMyUnoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyUnoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyUnoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
