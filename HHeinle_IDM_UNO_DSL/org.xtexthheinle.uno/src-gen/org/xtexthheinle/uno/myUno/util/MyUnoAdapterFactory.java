/**
 * generated by Xtext 2.23.0
 */
package org.xtexthheinle.uno.myUno.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtexthheinle.uno.myUno.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtexthheinle.uno.myUno.MyUnoPackage
 * @generated
 */
public class MyUnoAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyUnoPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyUnoAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = MyUnoPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MyUnoSwitch<Adapter> modelSwitch =
    new MyUnoSwitch<Adapter>()
    {
      @Override
      public Adapter caseVariante_UNO(Variante_UNO object)
      {
        return createVariante_UNOAdapter();
      }
      @Override
      public Adapter caseConfiguration_Depart(Configuration_Depart object)
      {
        return createConfiguration_DepartAdapter();
      }
      @Override
      public Adapter caseMain(Main object)
      {
        return createMainAdapter();
      }
      @Override
      public Adapter caseTalon(Talon object)
      {
        return createTalonAdapter();
      }
      @Override
      public Adapter caseManche(Manche object)
      {
        return createMancheAdapter();
      }
      @Override
      public Adapter caseInversion(Inversion object)
      {
        return createInversionAdapter();
      }
      @Override
      public Adapter caseTourner_les_mains(Tourner_les_mains object)
      {
        return createTourner_les_mainsAdapter();
      }
      @Override
      public Adapter caseCartes_1_9(Cartes_1_9 object)
      {
        return createCartes_1_9Adapter();
      }
      @Override
      public Adapter casePioche(Pioche object)
      {
        return createPiocheAdapter();
      }
      @Override
      public Adapter caseCumul(Cumul object)
      {
        return createCumulAdapter();
      }
      @Override
      public Adapter caseContestations(Contestations object)
      {
        return createContestationsAdapter();
      }
      @Override
      public Adapter caseFin_Manche(Fin_Manche object)
      {
        return createFin_MancheAdapter();
      }
      @Override
      public Adapter casePoints_manche(Points_manche object)
      {
        return createPoints_mancheAdapter();
      }
      @Override
      public Adapter casePerdants_manche(Perdants_manche object)
      {
        return createPerdants_mancheAdapter();
      }
      @Override
      public Adapter caseFin_Partie(Fin_Partie object)
      {
        return createFin_PartieAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Variante_UNO <em>Variante UNO</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Variante_UNO
   * @generated
   */
  public Adapter createVariante_UNOAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Configuration_Depart <em>Configuration Depart</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Configuration_Depart
   * @generated
   */
  public Adapter createConfiguration_DepartAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Main <em>Main</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Main
   * @generated
   */
  public Adapter createMainAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Talon <em>Talon</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Talon
   * @generated
   */
  public Adapter createTalonAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Manche <em>Manche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Manche
   * @generated
   */
  public Adapter createMancheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Inversion <em>Inversion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Inversion
   * @generated
   */
  public Adapter createInversionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Tourner_les_mains <em>Tourner les mains</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Tourner_les_mains
   * @generated
   */
  public Adapter createTourner_les_mainsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Cartes_1_9 <em>Cartes 19</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Cartes_1_9
   * @generated
   */
  public Adapter createCartes_1_9Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Pioche <em>Pioche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Pioche
   * @generated
   */
  public Adapter createPiocheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Cumul <em>Cumul</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Cumul
   * @generated
   */
  public Adapter createCumulAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Contestations <em>Contestations</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Contestations
   * @generated
   */
  public Adapter createContestationsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Fin_Manche <em>Fin Manche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Fin_Manche
   * @generated
   */
  public Adapter createFin_MancheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Points_manche <em>Points manche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Points_manche
   * @generated
   */
  public Adapter createPoints_mancheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Perdants_manche <em>Perdants manche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Perdants_manche
   * @generated
   */
  public Adapter createPerdants_mancheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtexthheinle.uno.myUno.Fin_Partie <em>Fin Partie</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtexthheinle.uno.myUno.Fin_Partie
   * @generated
   */
  public Adapter createFin_PartieAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //MyUnoAdapterFactory
