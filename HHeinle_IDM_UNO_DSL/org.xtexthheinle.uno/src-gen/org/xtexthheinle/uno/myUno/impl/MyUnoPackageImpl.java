/**
 * generated by Xtext 2.23.0
 */
package org.xtexthheinle.uno.myUno.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtexthheinle.uno.myUno.Cartes_1_9;
import org.xtexthheinle.uno.myUno.Configuration_Depart;
import org.xtexthheinle.uno.myUno.Contestations;
import org.xtexthheinle.uno.myUno.Cumul;
import org.xtexthheinle.uno.myUno.Etat_Main;
import org.xtexthheinle.uno.myUno.Fin_Manche;
import org.xtexthheinle.uno.myUno.Fin_Partie;
import org.xtexthheinle.uno.myUno.Interception;
import org.xtexthheinle.uno.myUno.Inversion;
import org.xtexthheinle.uno.myUno.Jouer_apres_pioche;
import org.xtexthheinle.uno.myUno.Main;
import org.xtexthheinle.uno.myUno.Manche;
import org.xtexthheinle.uno.myUno.MyUnoFactory;
import org.xtexthheinle.uno.myUno.MyUnoPackage;
import org.xtexthheinle.uno.myUno.Nb_Cartes_Mains;
import org.xtexthheinle.uno.myUno.Nb_Mains;
import org.xtexthheinle.uno.myUno.Nb_Talons;
import org.xtexthheinle.uno.myUno.Nb_cartes_a_piocher;
import org.xtexthheinle.uno.myUno.Nb_cartes_jouables;
import org.xtexthheinle.uno.myUno.Perdants_manche;
import org.xtexthheinle.uno.myUno.Pioche;
import org.xtexthheinle.uno.myUno.Points_manche;
import org.xtexthheinle.uno.myUno.Talon;
import org.xtexthheinle.uno.myUno.Tourner_les_mains;
import org.xtexthheinle.uno.myUno.Vainqueur_manche;
import org.xtexthheinle.uno.myUno.Vainqueur_total;
import org.xtexthheinle.uno.myUno.Variante_UNO;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyUnoPackageImpl extends EPackageImpl implements MyUnoPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variante_UNOEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass configuration_DepartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass talonEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mancheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tourner_les_mainsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cartes_1_9EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass piocheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cumulEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contestationsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fin_MancheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass points_mancheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass perdants_mancheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fin_PartieEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum etat_MainEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nb_MainsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nb_Cartes_MainsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nb_TalonsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nb_cartes_jouablesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum interceptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nb_cartes_a_piocherEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum jouer_apres_piocheEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum vainqueur_mancheEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum vainqueur_totalEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtexthheinle.uno.myUno.MyUnoPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MyUnoPackageImpl()
  {
    super(eNS_URI, MyUnoFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MyUnoPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MyUnoPackage init()
  {
    if (isInited) return (MyUnoPackage)EPackage.Registry.INSTANCE.getEPackage(MyUnoPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMyUnoPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MyUnoPackageImpl theMyUnoPackage = registeredMyUnoPackage instanceof MyUnoPackageImpl ? (MyUnoPackageImpl)registeredMyUnoPackage : new MyUnoPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMyUnoPackage.createPackageContents();

    // Initialize created meta-data
    theMyUnoPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMyUnoPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MyUnoPackage.eNS_URI, theMyUnoPackage);
    return theMyUnoPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariante_UNO()
  {
    return variante_UNOEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariante_UNO_Name()
  {
    return (EAttribute)variante_UNOEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_UNO_Configuration_depart()
  {
    return (EReference)variante_UNOEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_UNO_Manche()
  {
    return (EReference)variante_UNOEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_UNO_Fin_manche()
  {
    return (EReference)variante_UNOEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_UNO_Fin_partie()
  {
    return (EReference)variante_UNOEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConfiguration_Depart()
  {
    return configuration_DepartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConfiguration_Depart_Main()
  {
    return (EReference)configuration_DepartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConfiguration_Depart_Talon()
  {
    return (EReference)configuration_DepartEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConfiguration_Depart_Riviere()
  {
    return (EAttribute)configuration_DepartEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConfiguration_Depart_Temps_limite()
  {
    return (EAttribute)configuration_DepartEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConfiguration_Depart_Secondes()
  {
    return (EAttribute)configuration_DepartEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMain()
  {
    return mainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMain_Etat_main()
  {
    return (EAttribute)mainEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMain_Nb_mains()
  {
    return (EAttribute)mainEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMain_Nb_cartes_mains()
  {
    return (EAttribute)mainEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTalon()
  {
    return talonEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTalon_Nb_talons()
  {
    return (EAttribute)talonEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getManche()
  {
    return mancheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Inversion()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Tourner_les_mains()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Nb_cartes_jouables()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Cartes_1_9()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Pioche()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Cumul()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManche_Contestations()
  {
    return (EReference)mancheEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInversion()
  {
    return inversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInversion_Avec_carte_inversion()
  {
    return (EAttribute)inversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInversion_Avec_carte_sept()
  {
    return (EAttribute)inversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTourner_les_mains()
  {
    return tourner_les_mainsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTourner_les_mains_Avec_carte_zero()
  {
    return (EAttribute)tourner_les_mainsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTourner_les_mains_Avec_carte_uno()
  {
    return (EAttribute)tourner_les_mainsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCartes_1_9()
  {
    return cartes_1_9EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCartes_1_9_Suites()
  {
    return (EAttribute)cartes_1_9EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCartes_1_9_Suites_royales()
  {
    return (EAttribute)cartes_1_9EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCartes_1_9_Interception()
  {
    return (EAttribute)cartes_1_9EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPioche()
  {
    return piocheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPioche_Nb_cartes_a_piocher()
  {
    return (EAttribute)piocheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPioche_Jouer_apres_pioche()
  {
    return (EAttribute)piocheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCumul()
  {
    return cumulEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCumul_Cumul_plus_2()
  {
    return (EAttribute)cumulEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCumul_Cumul_plus_4()
  {
    return (EAttribute)cumulEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCumul_Cumul_carte_couleur()
  {
    return (EAttribute)cumulEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCumul_Cumul_carte_uno()
  {
    return (EAttribute)cumulEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContestations()
  {
    return contestationsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContestations_Inter_contestable()
  {
    return (EAttribute)contestationsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContestations_Plus4_contestable()
  {
    return (EAttribute)contestationsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFin_Manche()
  {
    return fin_MancheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFin_Manche_Dire_uno_obligatoire()
  {
    return (EAttribute)fin_MancheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFin_Manche_Points_manche()
  {
    return (EReference)fin_MancheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPoints_manche()
  {
    return points_mancheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPoints_manche_Vainqueur_manche()
  {
    return (EAttribute)points_mancheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPoints_manche_Perdants_manche()
  {
    return (EReference)points_mancheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPerdants_manche()
  {
    return perdants_mancheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPerdants_manche_Pm_zero_pts()
  {
    return (EAttribute)perdants_mancheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPerdants_manche_Pm_pts_selon_cartes_restantes()
  {
    return (EAttribute)perdants_mancheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFin_Partie()
  {
    return fin_PartieEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFin_Partie_Vainqueur_total()
  {
    return (EAttribute)fin_PartieEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEtat_Main()
  {
    return etat_MainEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNb_Mains()
  {
    return nb_MainsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNb_Cartes_Mains()
  {
    return nb_Cartes_MainsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNb_Talons()
  {
    return nb_TalonsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNb_cartes_jouables()
  {
    return nb_cartes_jouablesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getInterception()
  {
    return interceptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNb_cartes_a_piocher()
  {
    return nb_cartes_a_piocherEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getJouer_apres_pioche()
  {
    return jouer_apres_piocheEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getVainqueur_manche()
  {
    return vainqueur_mancheEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getVainqueur_total()
  {
    return vainqueur_totalEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyUnoFactory getMyUnoFactory()
  {
    return (MyUnoFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    variante_UNOEClass = createEClass(VARIANTE_UNO);
    createEAttribute(variante_UNOEClass, VARIANTE_UNO__NAME);
    createEReference(variante_UNOEClass, VARIANTE_UNO__CONFIGURATION_DEPART);
    createEReference(variante_UNOEClass, VARIANTE_UNO__MANCHE);
    createEReference(variante_UNOEClass, VARIANTE_UNO__FIN_MANCHE);
    createEReference(variante_UNOEClass, VARIANTE_UNO__FIN_PARTIE);

    configuration_DepartEClass = createEClass(CONFIGURATION_DEPART);
    createEReference(configuration_DepartEClass, CONFIGURATION_DEPART__MAIN);
    createEReference(configuration_DepartEClass, CONFIGURATION_DEPART__TALON);
    createEAttribute(configuration_DepartEClass, CONFIGURATION_DEPART__RIVIERE);
    createEAttribute(configuration_DepartEClass, CONFIGURATION_DEPART__TEMPS_LIMITE);
    createEAttribute(configuration_DepartEClass, CONFIGURATION_DEPART__SECONDES);

    mainEClass = createEClass(MAIN);
    createEAttribute(mainEClass, MAIN__ETAT_MAIN);
    createEAttribute(mainEClass, MAIN__NB_MAINS);
    createEAttribute(mainEClass, MAIN__NB_CARTES_MAINS);

    talonEClass = createEClass(TALON);
    createEAttribute(talonEClass, TALON__NB_TALONS);

    mancheEClass = createEClass(MANCHE);
    createEReference(mancheEClass, MANCHE__INVERSION);
    createEReference(mancheEClass, MANCHE__TOURNER_LES_MAINS);
    createEAttribute(mancheEClass, MANCHE__NB_CARTES_JOUABLES);
    createEReference(mancheEClass, MANCHE__CARTES_19);
    createEReference(mancheEClass, MANCHE__PIOCHE);
    createEReference(mancheEClass, MANCHE__CUMUL);
    createEReference(mancheEClass, MANCHE__CONTESTATIONS);

    inversionEClass = createEClass(INVERSION);
    createEAttribute(inversionEClass, INVERSION__AVEC_CARTE_INVERSION);
    createEAttribute(inversionEClass, INVERSION__AVEC_CARTE_SEPT);

    tourner_les_mainsEClass = createEClass(TOURNER_LES_MAINS);
    createEAttribute(tourner_les_mainsEClass, TOURNER_LES_MAINS__AVEC_CARTE_ZERO);
    createEAttribute(tourner_les_mainsEClass, TOURNER_LES_MAINS__AVEC_CARTE_UNO);

    cartes_1_9EClass = createEClass(CARTES_19);
    createEAttribute(cartes_1_9EClass, CARTES_19__SUITES);
    createEAttribute(cartes_1_9EClass, CARTES_19__SUITES_ROYALES);
    createEAttribute(cartes_1_9EClass, CARTES_19__INTERCEPTION);

    piocheEClass = createEClass(PIOCHE);
    createEAttribute(piocheEClass, PIOCHE__NB_CARTES_APIOCHER);
    createEAttribute(piocheEClass, PIOCHE__JOUER_APRES_PIOCHE);

    cumulEClass = createEClass(CUMUL);
    createEAttribute(cumulEClass, CUMUL__CUMUL_PLUS_2);
    createEAttribute(cumulEClass, CUMUL__CUMUL_PLUS_4);
    createEAttribute(cumulEClass, CUMUL__CUMUL_CARTE_COULEUR);
    createEAttribute(cumulEClass, CUMUL__CUMUL_CARTE_UNO);

    contestationsEClass = createEClass(CONTESTATIONS);
    createEAttribute(contestationsEClass, CONTESTATIONS__INTER_CONTESTABLE);
    createEAttribute(contestationsEClass, CONTESTATIONS__PLUS4_CONTESTABLE);

    fin_MancheEClass = createEClass(FIN_MANCHE);
    createEAttribute(fin_MancheEClass, FIN_MANCHE__DIRE_UNO_OBLIGATOIRE);
    createEReference(fin_MancheEClass, FIN_MANCHE__POINTS_MANCHE);

    points_mancheEClass = createEClass(POINTS_MANCHE);
    createEAttribute(points_mancheEClass, POINTS_MANCHE__VAINQUEUR_MANCHE);
    createEReference(points_mancheEClass, POINTS_MANCHE__PERDANTS_MANCHE);

    perdants_mancheEClass = createEClass(PERDANTS_MANCHE);
    createEAttribute(perdants_mancheEClass, PERDANTS_MANCHE__PM_ZERO_PTS);
    createEAttribute(perdants_mancheEClass, PERDANTS_MANCHE__PM_PTS_SELON_CARTES_RESTANTES);

    fin_PartieEClass = createEClass(FIN_PARTIE);
    createEAttribute(fin_PartieEClass, FIN_PARTIE__VAINQUEUR_TOTAL);

    // Create enums
    etat_MainEEnum = createEEnum(ETAT_MAIN);
    nb_MainsEEnum = createEEnum(NB_MAINS);
    nb_Cartes_MainsEEnum = createEEnum(NB_CARTES_MAINS);
    nb_TalonsEEnum = createEEnum(NB_TALONS);
    nb_cartes_jouablesEEnum = createEEnum(NB_CARTES_JOUABLES);
    interceptionEEnum = createEEnum(INTERCEPTION);
    nb_cartes_a_piocherEEnum = createEEnum(NB_CARTES_APIOCHER);
    jouer_apres_piocheEEnum = createEEnum(JOUER_APRES_PIOCHE);
    vainqueur_mancheEEnum = createEEnum(VAINQUEUR_MANCHE);
    vainqueur_totalEEnum = createEEnum(VAINQUEUR_TOTAL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(variante_UNOEClass, Variante_UNO.class, "Variante_UNO", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariante_UNO_Name(), ecorePackage.getEString(), "name", null, 0, 1, Variante_UNO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_UNO_Configuration_depart(), this.getConfiguration_Depart(), null, "configuration_depart", null, 0, 1, Variante_UNO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_UNO_Manche(), this.getManche(), null, "manche", null, 0, 1, Variante_UNO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_UNO_Fin_manche(), this.getFin_Manche(), null, "fin_manche", null, 0, 1, Variante_UNO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_UNO_Fin_partie(), this.getFin_Partie(), null, "fin_partie", null, 0, 1, Variante_UNO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(configuration_DepartEClass, Configuration_Depart.class, "Configuration_Depart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConfiguration_Depart_Main(), this.getMain(), null, "main", null, 0, 1, Configuration_Depart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConfiguration_Depart_Talon(), this.getTalon(), null, "talon", null, 0, 1, Configuration_Depart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfiguration_Depart_Riviere(), ecorePackage.getEString(), "riviere", null, 0, 1, Configuration_Depart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfiguration_Depart_Temps_limite(), ecorePackage.getEString(), "temps_limite", null, 0, 1, Configuration_Depart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConfiguration_Depart_Secondes(), ecorePackage.getEInt(), "secondes", null, 0, 1, Configuration_Depart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mainEClass, Main.class, "Main", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMain_Etat_main(), this.getEtat_Main(), "etat_main", null, 0, 1, Main.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMain_Nb_mains(), this.getNb_Mains(), "nb_mains", null, 0, 1, Main.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMain_Nb_cartes_mains(), this.getNb_Cartes_Mains(), "nb_cartes_mains", null, 0, 1, Main.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(talonEClass, Talon.class, "Talon", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTalon_Nb_talons(), this.getNb_Talons(), "nb_talons", null, 0, 1, Talon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mancheEClass, Manche.class, "Manche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getManche_Inversion(), this.getInversion(), null, "inversion", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getManche_Tourner_les_mains(), this.getTourner_les_mains(), null, "tourner_les_mains", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Nb_cartes_jouables(), this.getNb_cartes_jouables(), "nb_cartes_jouables", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getManche_Cartes_1_9(), this.getCartes_1_9(), null, "cartes_1_9", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getManche_Pioche(), this.getPioche(), null, "pioche", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getManche_Cumul(), this.getCumul(), null, "cumul", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getManche_Contestations(), this.getContestations(), null, "contestations", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inversionEClass, Inversion.class, "Inversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInversion_Avec_carte_inversion(), ecorePackage.getEString(), "avec_carte_inversion", null, 0, 1, Inversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInversion_Avec_carte_sept(), ecorePackage.getEString(), "avec_carte_sept", null, 0, 1, Inversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tourner_les_mainsEClass, Tourner_les_mains.class, "Tourner_les_mains", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTourner_les_mains_Avec_carte_zero(), ecorePackage.getEString(), "avec_carte_zero", null, 0, 1, Tourner_les_mains.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTourner_les_mains_Avec_carte_uno(), ecorePackage.getEString(), "avec_carte_uno", null, 0, 1, Tourner_les_mains.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cartes_1_9EClass, Cartes_1_9.class, "Cartes_1_9", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCartes_1_9_Suites(), ecorePackage.getEString(), "suites", null, 0, 1, Cartes_1_9.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCartes_1_9_Suites_royales(), ecorePackage.getEString(), "suites_royales", null, 0, 1, Cartes_1_9.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCartes_1_9_Interception(), this.getInterception(), "interception", null, 0, 1, Cartes_1_9.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(piocheEClass, Pioche.class, "Pioche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPioche_Nb_cartes_a_piocher(), this.getNb_cartes_a_piocher(), "nb_cartes_a_piocher", null, 0, 1, Pioche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPioche_Jouer_apres_pioche(), this.getJouer_apres_pioche(), "jouer_apres_pioche", null, 0, 1, Pioche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cumulEClass, Cumul.class, "Cumul", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCumul_Cumul_plus_2(), ecorePackage.getEString(), "cumul_plus_2", null, 0, 1, Cumul.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCumul_Cumul_plus_4(), ecorePackage.getEString(), "cumul_plus_4", null, 0, 1, Cumul.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCumul_Cumul_carte_couleur(), ecorePackage.getEString(), "cumul_carte_couleur", null, 0, 1, Cumul.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCumul_Cumul_carte_uno(), ecorePackage.getEString(), "cumul_carte_uno", null, 0, 1, Cumul.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contestationsEClass, Contestations.class, "Contestations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContestations_Inter_contestable(), ecorePackage.getEString(), "inter_contestable", null, 0, 1, Contestations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContestations_Plus4_contestable(), ecorePackage.getEString(), "plus4_contestable", null, 0, 1, Contestations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fin_MancheEClass, Fin_Manche.class, "Fin_Manche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFin_Manche_Dire_uno_obligatoire(), ecorePackage.getEString(), "dire_uno_obligatoire", null, 0, 1, Fin_Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFin_Manche_Points_manche(), this.getPoints_manche(), null, "points_manche", null, 0, 1, Fin_Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(points_mancheEClass, Points_manche.class, "Points_manche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPoints_manche_Vainqueur_manche(), this.getVainqueur_manche(), "vainqueur_manche", null, 0, 1, Points_manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPoints_manche_Perdants_manche(), this.getPerdants_manche(), null, "perdants_manche", null, 0, 1, Points_manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(perdants_mancheEClass, Perdants_manche.class, "Perdants_manche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPerdants_manche_Pm_zero_pts(), ecorePackage.getEString(), "pm_zero_pts", null, 0, 1, Perdants_manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPerdants_manche_Pm_pts_selon_cartes_restantes(), ecorePackage.getEString(), "pm_pts_selon_cartes_restantes", null, 0, 1, Perdants_manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fin_PartieEClass, Fin_Partie.class, "Fin_Partie", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFin_Partie_Vainqueur_total(), this.getVainqueur_total(), "vainqueur_total", null, 0, 1, Fin_Partie.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(etat_MainEEnum, Etat_Main.class, "Etat_Main");
    addEEnumLiteral(etat_MainEEnum, Etat_Main.VISIBLE);
    addEEnumLiteral(etat_MainEEnum, Etat_Main.CACHEE);

    initEEnum(nb_MainsEEnum, Nb_Mains.class, "Nb_Mains");
    addEEnumLiteral(nb_MainsEEnum, Nb_Mains.UNE_MAIN);
    addEEnumLiteral(nb_MainsEEnum, Nb_Mains.TROIS_MAINS);

    initEEnum(nb_Cartes_MainsEEnum, Nb_Cartes_Mains.class, "Nb_Cartes_Mains");
    addEEnumLiteral(nb_Cartes_MainsEEnum, Nb_Cartes_Mains.SEPT_CARTES);
    addEEnumLiteral(nb_Cartes_MainsEEnum, Nb_Cartes_Mains.QUATRE_CARTES);
    addEEnumLiteral(nb_Cartes_MainsEEnum, Nb_Cartes_Mains.CINQ_CARTES);

    initEEnum(nb_TalonsEEnum, Nb_Talons.class, "Nb_Talons");
    addEEnumLiteral(nb_TalonsEEnum, Nb_Talons.UN_TALON);
    addEEnumLiteral(nb_TalonsEEnum, Nb_Talons.TROIS_TALONS);

    initEEnum(nb_cartes_jouablesEEnum, Nb_cartes_jouables.class, "Nb_cartes_jouables");
    addEEnumLiteral(nb_cartes_jouablesEEnum, Nb_cartes_jouables.UNE_PAR_UNE);
    addEEnumLiteral(nb_cartes_jouablesEEnum, Nb_cartes_jouables.PLUSIEURS_ALA_FOIS_AUTORISE);

    initEEnum(interceptionEEnum, Interception.class, "Interception");
    addEEnumLiteral(interceptionEEnum, Interception.MM_NB);
    addEEnumLiteral(interceptionEEnum, Interception.MM_COULEUR);
    addEEnumLiteral(interceptionEEnum, Interception.MM_NB_COULEUR);

    initEEnum(nb_cartes_a_piocherEEnum, Nb_cartes_a_piocher.class, "Nb_cartes_a_piocher");
    addEEnumLiteral(nb_cartes_a_piocherEEnum, Nb_cartes_a_piocher.UNE_SEULE);
    addEEnumLiteral(nb_cartes_a_piocherEEnum, Nb_cartes_a_piocher.AU_PLUS_TROIS);

    initEEnum(jouer_apres_piocheEEnum, Jouer_apres_pioche.class, "Jouer_apres_pioche");
    addEEnumLiteral(jouer_apres_piocheEEnum, Jouer_apres_pioche.DROIT_DE_JOUER);
    addEEnumLiteral(jouer_apres_piocheEEnum, Jouer_apres_pioche.PAS_DROIT_DE_JOUER);

    initEEnum(vainqueur_mancheEEnum, Vainqueur_manche.class, "Vainqueur_manche");
    addEEnumLiteral(vainqueur_mancheEEnum, Vainqueur_manche.MANCHE_GAGNEE);
    addEEnumLiteral(vainqueur_mancheEEnum, Vainqueur_manche.VM_PTS_SELON_CARTE_ADVERSAIRES);
    addEEnumLiteral(vainqueur_mancheEEnum, Vainqueur_manche.VM_ZERO_PTS);

    initEEnum(vainqueur_totalEEnum, Vainqueur_total.class, "Vainqueur_total");
    addEEnumLiteral(vainqueur_totalEEnum, Vainqueur_total.SCORE_LE_PLUS_GRD);
    addEEnumLiteral(vainqueur_totalEEnum, Vainqueur_total.NB_MANCHES_GAGNEES);
    addEEnumLiteral(vainqueur_totalEEnum, Vainqueur_total.MOINS_DE_500_PTS);
    addEEnumLiteral(vainqueur_totalEEnum, Vainqueur_total.SCORE_LE_PLUS_PETIT);

    // Create resource
    createResource(eNS_URI);
  }

} //MyUnoPackageImpl
