/**
 * generated by Xtext 2.23.0
 */
package org.xtexthheinle.uno.myUno.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtexthheinle.uno.myUno.Contestations;
import org.xtexthheinle.uno.myUno.MyUnoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contestations</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtexthheinle.uno.myUno.impl.ContestationsImpl#getInter_contestable <em>Inter contestable</em>}</li>
 *   <li>{@link org.xtexthheinle.uno.myUno.impl.ContestationsImpl#getPlus4_contestable <em>Plus4 contestable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContestationsImpl extends MinimalEObjectImpl.Container implements Contestations
{
  /**
   * The default value of the '{@link #getInter_contestable() <em>Inter contestable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInter_contestable()
   * @generated
   * @ordered
   */
  protected static final String INTER_CONTESTABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInter_contestable() <em>Inter contestable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInter_contestable()
   * @generated
   * @ordered
   */
  protected String inter_contestable = INTER_CONTESTABLE_EDEFAULT;

  /**
   * The default value of the '{@link #getPlus4_contestable() <em>Plus4 contestable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlus4_contestable()
   * @generated
   * @ordered
   */
  protected static final String PLUS4_CONTESTABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPlus4_contestable() <em>Plus4 contestable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlus4_contestable()
   * @generated
   * @ordered
   */
  protected String plus4_contestable = PLUS4_CONTESTABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContestationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUnoPackage.Literals.CONTESTATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInter_contestable()
  {
    return inter_contestable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInter_contestable(String newInter_contestable)
  {
    String oldInter_contestable = inter_contestable;
    inter_contestable = newInter_contestable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUnoPackage.CONTESTATIONS__INTER_CONTESTABLE, oldInter_contestable, inter_contestable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPlus4_contestable()
  {
    return plus4_contestable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPlus4_contestable(String newPlus4_contestable)
  {
    String oldPlus4_contestable = plus4_contestable;
    plus4_contestable = newPlus4_contestable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUnoPackage.CONTESTATIONS__PLUS4_CONTESTABLE, oldPlus4_contestable, plus4_contestable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUnoPackage.CONTESTATIONS__INTER_CONTESTABLE:
        return getInter_contestable();
      case MyUnoPackage.CONTESTATIONS__PLUS4_CONTESTABLE:
        return getPlus4_contestable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUnoPackage.CONTESTATIONS__INTER_CONTESTABLE:
        setInter_contestable((String)newValue);
        return;
      case MyUnoPackage.CONTESTATIONS__PLUS4_CONTESTABLE:
        setPlus4_contestable((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUnoPackage.CONTESTATIONS__INTER_CONTESTABLE:
        setInter_contestable(INTER_CONTESTABLE_EDEFAULT);
        return;
      case MyUnoPackage.CONTESTATIONS__PLUS4_CONTESTABLE:
        setPlus4_contestable(PLUS4_CONTESTABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUnoPackage.CONTESTATIONS__INTER_CONTESTABLE:
        return INTER_CONTESTABLE_EDEFAULT == null ? inter_contestable != null : !INTER_CONTESTABLE_EDEFAULT.equals(inter_contestable);
      case MyUnoPackage.CONTESTATIONS__PLUS4_CONTESTABLE:
        return PLUS4_CONTESTABLE_EDEFAULT == null ? plus4_contestable != null : !PLUS4_CONTESTABLE_EDEFAULT.equals(plus4_contestable);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (inter_contestable: ");
    result.append(inter_contestable);
    result.append(", plus4_contestable: ");
    result.append(plus4_contestable);
    result.append(')');
    return result.toString();
  }

} //ContestationsImpl
