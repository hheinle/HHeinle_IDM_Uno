/*
 * generated by Xtext 2.23.0
 */
package org.xtexthheinle.uno.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyUnoGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class Variante_UNOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Variante_UNO");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNom_varianteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConfiguration_departAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConfiguration_departConfiguration_DepartParserRuleCall_3_0 = (RuleCall)cConfiguration_departAssignment_3.eContents().get(0);
		private final Assignment cMancheAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMancheMancheParserRuleCall_4_0 = (RuleCall)cMancheAssignment_4.eContents().get(0);
		private final Assignment cFin_mancheAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFin_mancheFin_MancheParserRuleCall_5_0 = (RuleCall)cFin_mancheAssignment_5.eContents().get(0);
		private final Assignment cFin_partieAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFin_partieFin_PartieParserRuleCall_6_0 = (RuleCall)cFin_partieAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Variante_UNO:
		//	'nom_variante' name=STRING
		//	'{'
		//	configuration_depart=Configuration_Depart
		//	manche=Manche
		//	fin_manche=Fin_Manche
		//	fin_partie=Fin_Partie
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'nom_variante' name=STRING '{' configuration_depart=Configuration_Depart manche=Manche fin_manche=Fin_Manche
		//fin_partie=Fin_Partie '}'
		public Group getGroup() { return cGroup; }
		
		//'nom_variante'
		public Keyword getNom_varianteKeyword_0() { return cNom_varianteKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//configuration_depart=Configuration_Depart
		public Assignment getConfiguration_departAssignment_3() { return cConfiguration_departAssignment_3; }
		
		//Configuration_Depart
		public RuleCall getConfiguration_departConfiguration_DepartParserRuleCall_3_0() { return cConfiguration_departConfiguration_DepartParserRuleCall_3_0; }
		
		//manche=Manche
		public Assignment getMancheAssignment_4() { return cMancheAssignment_4; }
		
		//Manche
		public RuleCall getMancheMancheParserRuleCall_4_0() { return cMancheMancheParserRuleCall_4_0; }
		
		//fin_manche=Fin_Manche
		public Assignment getFin_mancheAssignment_5() { return cFin_mancheAssignment_5; }
		
		//Fin_Manche
		public RuleCall getFin_mancheFin_MancheParserRuleCall_5_0() { return cFin_mancheFin_MancheParserRuleCall_5_0; }
		
		//fin_partie=Fin_Partie
		public Assignment getFin_partieAssignment_6() { return cFin_partieAssignment_6; }
		
		//Fin_Partie
		public RuleCall getFin_partieFin_PartieParserRuleCall_6_0() { return cFin_partieFin_PartieParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class Configuration_DepartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Configuration_Depart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDepartKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMainAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMainMainParserRuleCall_2_0 = (RuleCall)cMainAssignment_2.eContents().get(0);
		private final Assignment cTalonAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTalonTalonParserRuleCall_3_0 = (RuleCall)cTalonAssignment_3.eContents().get(0);
		private final Assignment cRiviereAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cRiviereRiviereKeyword_4_0 = (Keyword)cRiviereAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cTemps_limiteAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cTemps_limiteTemps_limiteKeyword_5_0_0 = (Keyword)cTemps_limiteAssignment_5_0.eContents().get(0);
		private final Assignment cSecondesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSecondesINTTerminalRuleCall_5_1_0 = (RuleCall)cSecondesAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		////=======Configuration_Depart=======
		//Configuration_Depart:
		//	'Depart' ':'
		//	main=Main
		//	talon=Talon
		//	riviere='riviere'? (temps_limite='temps_limite:' secondes=INT)?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Depart' ':' main=Main talon=Talon riviere='riviere'? (temps_limite='temps_limite:' secondes=INT)? ';'
		public Group getGroup() { return cGroup; }
		
		//'Depart'
		public Keyword getDepartKeyword_0() { return cDepartKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//main=Main
		public Assignment getMainAssignment_2() { return cMainAssignment_2; }
		
		//Main
		public RuleCall getMainMainParserRuleCall_2_0() { return cMainMainParserRuleCall_2_0; }
		
		//talon=Talon
		public Assignment getTalonAssignment_3() { return cTalonAssignment_3; }
		
		//Talon
		public RuleCall getTalonTalonParserRuleCall_3_0() { return cTalonTalonParserRuleCall_3_0; }
		
		//riviere='riviere'?
		public Assignment getRiviereAssignment_4() { return cRiviereAssignment_4; }
		
		//'riviere'
		public Keyword getRiviereRiviereKeyword_4_0() { return cRiviereRiviereKeyword_4_0; }
		
		//(temps_limite='temps_limite:' secondes=INT)?
		public Group getGroup_5() { return cGroup_5; }
		
		//temps_limite='temps_limite:'
		public Assignment getTemps_limiteAssignment_5_0() { return cTemps_limiteAssignment_5_0; }
		
		//'temps_limite:'
		public Keyword getTemps_limiteTemps_limiteKeyword_5_0_0() { return cTemps_limiteTemps_limiteKeyword_5_0_0; }
		
		//secondes=INT
		public Assignment getSecondesAssignment_5_1() { return cSecondesAssignment_5_1; }
		
		//INT
		public RuleCall getSecondesINTTerminalRuleCall_5_1_0() { return cSecondesINTTerminalRuleCall_5_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class MainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Main");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEtat_mainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEtat_mainAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEtat_mainEtat_MainEnumRuleCall_2_0 = (RuleCall)cEtat_mainAssignment_2.eContents().get(0);
		private final Keyword cNb_mainsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNb_mainsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNb_mainsNb_MainsEnumRuleCall_5_0 = (RuleCall)cNb_mainsAssignment_5.eContents().get(0);
		private final Keyword cNb_cartes_mainKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNb_cartes_mainsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNb_cartes_mainsNb_Cartes_MainsEnumRuleCall_8_0 = (RuleCall)cNb_cartes_mainsAssignment_8.eContents().get(0);
		
		//Main:
		//	'etat_main' ':' etat_main=Etat_Main
		//	'nb_mains' ':' nb_mains=Nb_Mains
		//	'nb_cartes_main' ':' nb_cartes_mains=Nb_Cartes_Mains;
		@Override public ParserRule getRule() { return rule; }
		
		//'etat_main' ':' etat_main=Etat_Main 'nb_mains' ':' nb_mains=Nb_Mains 'nb_cartes_main' ':'
		//nb_cartes_mains=Nb_Cartes_Mains
		public Group getGroup() { return cGroup; }
		
		//'etat_main'
		public Keyword getEtat_mainKeyword_0() { return cEtat_mainKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//etat_main=Etat_Main
		public Assignment getEtat_mainAssignment_2() { return cEtat_mainAssignment_2; }
		
		//Etat_Main
		public RuleCall getEtat_mainEtat_MainEnumRuleCall_2_0() { return cEtat_mainEtat_MainEnumRuleCall_2_0; }
		
		//'nb_mains'
		public Keyword getNb_mainsKeyword_3() { return cNb_mainsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//nb_mains=Nb_Mains
		public Assignment getNb_mainsAssignment_5() { return cNb_mainsAssignment_5; }
		
		//Nb_Mains
		public RuleCall getNb_mainsNb_MainsEnumRuleCall_5_0() { return cNb_mainsNb_MainsEnumRuleCall_5_0; }
		
		//'nb_cartes_main'
		public Keyword getNb_cartes_mainKeyword_6() { return cNb_cartes_mainKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//nb_cartes_mains=Nb_Cartes_Mains
		public Assignment getNb_cartes_mainsAssignment_8() { return cNb_cartes_mainsAssignment_8; }
		
		//Nb_Cartes_Mains
		public RuleCall getNb_cartes_mainsNb_Cartes_MainsEnumRuleCall_8_0() { return cNb_cartes_mainsNb_Cartes_MainsEnumRuleCall_8_0; }
	}
	public class TalonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Talon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNb_talonsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNb_talonsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNb_talonsNb_TalonsEnumRuleCall_2_0 = (RuleCall)cNb_talonsAssignment_2.eContents().get(0);
		
		//Talon:
		//	'nb_talons' ':' nb_talons=Nb_Talons;
		@Override public ParserRule getRule() { return rule; }
		
		//'nb_talons' ':' nb_talons=Nb_Talons
		public Group getGroup() { return cGroup; }
		
		//'nb_talons'
		public Keyword getNb_talonsKeyword_0() { return cNb_talonsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//nb_talons=Nb_Talons
		public Assignment getNb_talonsAssignment_2() { return cNb_talonsAssignment_2; }
		
		//Nb_Talons
		public RuleCall getNb_talonsNb_TalonsEnumRuleCall_2_0() { return cNb_talonsNb_TalonsEnumRuleCall_2_0; }
	}
	public class MancheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Manche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMancheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cInversionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cInversionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cInversionInversionParserRuleCall_2_2_0 = (RuleCall)cInversionAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTourner_mainsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTourner_les_mainsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTourner_les_mainsTourner_les_mainsParserRuleCall_3_2_0 = (RuleCall)cTourner_les_mainsAssignment_3_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cNb_cartes_jouablesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNb_cartes_jouablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNb_cartes_jouablesNb_cartes_jouablesEnumRuleCall_6_0 = (RuleCall)cNb_cartes_jouablesAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCartes_1_a_9Keyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cCartes_1_9Assignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cCartes_1_9Cartes_1_9ParserRuleCall_8_2_0 = (RuleCall)cCartes_1_9Assignment_8_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cPiocheAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cPiochePiocheParserRuleCall_9_0 = (RuleCall)cPiocheAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCumulKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cCumulAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cCumulCumulParserRuleCall_10_2_0 = (RuleCall)cCumulAssignment_10_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cContestationsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cContestationsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cContestationsContestationsParserRuleCall_11_2_0 = (RuleCall)cContestationsAssignment_11_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		////=======Manche=======
		//Manche:
		//	'Manche' ':' ('Inversion' '(' inversion=Inversion ')')? ('Tourner_mains' '(' tourner_les_mains=Tourner_les_mains
		//	')')?
		//	'Nb_cartes_jouables' '(' nb_cartes_jouables=Nb_cartes_jouables ')' ('Cartes_1_a_9' '(' cartes_1_9=Cartes_1_9 ')')?
		//	pioche=Pioche ('Cumul' '(' cumul=Cumul ')')? ('Contestations' '(' contestations=Contestations ')')?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Manche' ':' ('Inversion' '(' inversion=Inversion ')')? ('Tourner_mains' '(' tourner_les_mains=Tourner_les_mains ')')?
		//'Nb_cartes_jouables' '(' nb_cartes_jouables=Nb_cartes_jouables ')' ('Cartes_1_a_9' '(' cartes_1_9=Cartes_1_9 ')')?
		//pioche=Pioche ('Cumul' '(' cumul=Cumul ')')? ('Contestations' '(' contestations=Contestations ')')? ';'
		public Group getGroup() { return cGroup; }
		
		//'Manche'
		public Keyword getMancheKeyword_0() { return cMancheKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('Inversion' '(' inversion=Inversion ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Inversion'
		public Keyword getInversionKeyword_2_0() { return cInversionKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//inversion=Inversion
		public Assignment getInversionAssignment_2_2() { return cInversionAssignment_2_2; }
		
		//Inversion
		public RuleCall getInversionInversionParserRuleCall_2_2_0() { return cInversionInversionParserRuleCall_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('Tourner_mains' '(' tourner_les_mains=Tourner_les_mains ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Tourner_mains'
		public Keyword getTourner_mainsKeyword_3_0() { return cTourner_mainsKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//tourner_les_mains=Tourner_les_mains
		public Assignment getTourner_les_mainsAssignment_3_2() { return cTourner_les_mainsAssignment_3_2; }
		
		//Tourner_les_mains
		public RuleCall getTourner_les_mainsTourner_les_mainsParserRuleCall_3_2_0() { return cTourner_les_mainsTourner_les_mainsParserRuleCall_3_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
		
		//'Nb_cartes_jouables'
		public Keyword getNb_cartes_jouablesKeyword_4() { return cNb_cartes_jouablesKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//nb_cartes_jouables=Nb_cartes_jouables
		public Assignment getNb_cartes_jouablesAssignment_6() { return cNb_cartes_jouablesAssignment_6; }
		
		//Nb_cartes_jouables
		public RuleCall getNb_cartes_jouablesNb_cartes_jouablesEnumRuleCall_6_0() { return cNb_cartes_jouablesNb_cartes_jouablesEnumRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//('Cartes_1_a_9' '(' cartes_1_9=Cartes_1_9 ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Cartes_1_a_9'
		public Keyword getCartes_1_a_9Keyword_8_0() { return cCartes_1_a_9Keyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//cartes_1_9=Cartes_1_9
		public Assignment getCartes_1_9Assignment_8_2() { return cCartes_1_9Assignment_8_2; }
		
		//Cartes_1_9
		public RuleCall getCartes_1_9Cartes_1_9ParserRuleCall_8_2_0() { return cCartes_1_9Cartes_1_9ParserRuleCall_8_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
		
		//pioche=Pioche
		public Assignment getPiocheAssignment_9() { return cPiocheAssignment_9; }
		
		//Pioche
		public RuleCall getPiochePiocheParserRuleCall_9_0() { return cPiochePiocheParserRuleCall_9_0; }
		
		//('Cumul' '(' cumul=Cumul ')')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Cumul'
		public Keyword getCumulKeyword_10_0() { return cCumulKeyword_10_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10_1() { return cLeftParenthesisKeyword_10_1; }
		
		//cumul=Cumul
		public Assignment getCumulAssignment_10_2() { return cCumulAssignment_10_2; }
		
		//Cumul
		public RuleCall getCumulCumulParserRuleCall_10_2_0() { return cCumulCumulParserRuleCall_10_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10_3() { return cRightParenthesisKeyword_10_3; }
		
		//('Contestations' '(' contestations=Contestations ')')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'Contestations'
		public Keyword getContestationsKeyword_11_0() { return cContestationsKeyword_11_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_11_1() { return cLeftParenthesisKeyword_11_1; }
		
		//contestations=Contestations
		public Assignment getContestationsAssignment_11_2() { return cContestationsAssignment_11_2; }
		
		//Contestations
		public RuleCall getContestationsContestationsParserRuleCall_11_2_0() { return cContestationsContestationsParserRuleCall_11_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11_3() { return cRightParenthesisKeyword_11_3; }
		
		//';'
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }
	}
	public class InversionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Inversion");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cAvec_carte_inversionAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final Keyword cAvec_carte_inversionAvec_carte_inversionKeyword_0_0 = (Keyword)cAvec_carte_inversionAssignment_0.eContents().get(0);
		private final Assignment cAvec_carte_septAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Keyword cAvec_carte_septAvec_carte_septKeyword_1_0 = (Keyword)cAvec_carte_septAssignment_1.eContents().get(0);
		
		//Inversion:
		//	avec_carte_inversion='avec_carte_inversion'?
		//	& avec_carte_sept='avec_carte_sept'?;
		@Override public ParserRule getRule() { return rule; }
		
		//avec_carte_inversion='avec_carte_inversion'? & avec_carte_sept='avec_carte_sept'?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//avec_carte_inversion='avec_carte_inversion'?
		public Assignment getAvec_carte_inversionAssignment_0() { return cAvec_carte_inversionAssignment_0; }
		
		//'avec_carte_inversion'
		public Keyword getAvec_carte_inversionAvec_carte_inversionKeyword_0_0() { return cAvec_carte_inversionAvec_carte_inversionKeyword_0_0; }
		
		//avec_carte_sept='avec_carte_sept'?
		public Assignment getAvec_carte_septAssignment_1() { return cAvec_carte_septAssignment_1; }
		
		//'avec_carte_sept'
		public Keyword getAvec_carte_septAvec_carte_septKeyword_1_0() { return cAvec_carte_septAvec_carte_septKeyword_1_0; }
	}
	public class Tourner_les_mainsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Tourner_les_mains");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cAvec_carte_zeroAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final Keyword cAvec_carte_zeroAvec_carte_zeroKeyword_0_0 = (Keyword)cAvec_carte_zeroAssignment_0.eContents().get(0);
		private final Assignment cAvec_carte_unoAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Keyword cAvec_carte_unoAvec_carte_unoKeyword_1_0 = (Keyword)cAvec_carte_unoAssignment_1.eContents().get(0);
		
		//Tourner_les_mains:
		//	avec_carte_zero='avec_carte_zero'?
		//	& avec_carte_uno='avec_carte_uno'?;
		@Override public ParserRule getRule() { return rule; }
		
		//avec_carte_zero='avec_carte_zero'? & avec_carte_uno='avec_carte_uno'?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//avec_carte_zero='avec_carte_zero'?
		public Assignment getAvec_carte_zeroAssignment_0() { return cAvec_carte_zeroAssignment_0; }
		
		//'avec_carte_zero'
		public Keyword getAvec_carte_zeroAvec_carte_zeroKeyword_0_0() { return cAvec_carte_zeroAvec_carte_zeroKeyword_0_0; }
		
		//avec_carte_uno='avec_carte_uno'?
		public Assignment getAvec_carte_unoAssignment_1() { return cAvec_carte_unoAssignment_1; }
		
		//'avec_carte_uno'
		public Keyword getAvec_carte_unoAvec_carte_unoKeyword_1_0() { return cAvec_carte_unoAvec_carte_unoKeyword_1_0; }
	}
	public class Cartes_1_9Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Cartes_1_9");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cSuitesAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final Keyword cSuitesSuitesKeyword_0_0 = (Keyword)cSuitesAssignment_0.eContents().get(0);
		private final Assignment cSuites_royalesAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Keyword cSuites_royalesSuites_royalesKeyword_1_0 = (Keyword)cSuites_royalesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cInterceptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cInterceptionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cInterceptionInterceptionEnumRuleCall_2_2_0 = (RuleCall)cInterceptionAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Cartes_1_9:
		//	suites='suites'?
		//	& suites_royales='suites_royales'?
		//	& ('interception' '{' interception=Interception '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//suites='suites'? & suites_royales='suites_royales'? & ('interception' '{' interception=Interception '}')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//suites='suites'?
		public Assignment getSuitesAssignment_0() { return cSuitesAssignment_0; }
		
		//'suites'
		public Keyword getSuitesSuitesKeyword_0_0() { return cSuitesSuitesKeyword_0_0; }
		
		//suites_royales='suites_royales'?
		public Assignment getSuites_royalesAssignment_1() { return cSuites_royalesAssignment_1; }
		
		//'suites_royales'
		public Keyword getSuites_royalesSuites_royalesKeyword_1_0() { return cSuites_royalesSuites_royalesKeyword_1_0; }
		
		//('interception' '{' interception=Interception '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'interception'
		public Keyword getInterceptionKeyword_2_0() { return cInterceptionKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//interception=Interception
		public Assignment getInterceptionAssignment_2_2() { return cInterceptionAssignment_2_2; }
		
		//Interception
		public RuleCall getInterceptionInterceptionEnumRuleCall_2_2_0() { return cInterceptionInterceptionEnumRuleCall_2_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class PiocheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Pioche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPiocheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNb_cartes_a_piocherKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNb_cartes_a_piocherAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNb_cartes_a_piocherNb_cartes_a_piocherEnumRuleCall_3_0 = (RuleCall)cNb_cartes_a_piocherAssignment_3.eContents().get(0);
		private final Keyword cJouer_apres_piocheKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cJouer_apres_piocheAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cJouer_apres_piocheJouer_apres_piocheEnumRuleCall_5_0 = (RuleCall)cJouer_apres_piocheAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Pioche:
		//	'Pioche' '('
		//	'nb_cartes_a_piocher:' nb_cartes_a_piocher=Nb_cartes_a_piocher
		//	'jouer_apres_pioche:' jouer_apres_pioche=Jouer_apres_pioche
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'Pioche' '(' 'nb_cartes_a_piocher:' nb_cartes_a_piocher=Nb_cartes_a_piocher 'jouer_apres_pioche:'
		//jouer_apres_pioche=Jouer_apres_pioche ')'
		public Group getGroup() { return cGroup; }
		
		//'Pioche'
		public Keyword getPiocheKeyword_0() { return cPiocheKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'nb_cartes_a_piocher:'
		public Keyword getNb_cartes_a_piocherKeyword_2() { return cNb_cartes_a_piocherKeyword_2; }
		
		//nb_cartes_a_piocher=Nb_cartes_a_piocher
		public Assignment getNb_cartes_a_piocherAssignment_3() { return cNb_cartes_a_piocherAssignment_3; }
		
		//Nb_cartes_a_piocher
		public RuleCall getNb_cartes_a_piocherNb_cartes_a_piocherEnumRuleCall_3_0() { return cNb_cartes_a_piocherNb_cartes_a_piocherEnumRuleCall_3_0; }
		
		//'jouer_apres_pioche:'
		public Keyword getJouer_apres_piocheKeyword_4() { return cJouer_apres_piocheKeyword_4; }
		
		//jouer_apres_pioche=Jouer_apres_pioche
		public Assignment getJouer_apres_piocheAssignment_5() { return cJouer_apres_piocheAssignment_5; }
		
		//Jouer_apres_pioche
		public RuleCall getJouer_apres_piocheJouer_apres_piocheEnumRuleCall_5_0() { return cJouer_apres_piocheJouer_apres_piocheEnumRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class CumulElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Cumul");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cCumul_plus_2Assignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final Keyword cCumul_plus_2Cumul_plus_2Keyword_0_0 = (Keyword)cCumul_plus_2Assignment_0.eContents().get(0);
		private final Assignment cCumul_plus_4Assignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Keyword cCumul_plus_4Cumul_plus_4Keyword_1_0 = (Keyword)cCumul_plus_4Assignment_1.eContents().get(0);
		private final Assignment cCumul_carte_couleurAssignment_2 = (Assignment)cUnorderedGroup.eContents().get(2);
		private final Keyword cCumul_carte_couleurCumul_carte_couleurKeyword_2_0 = (Keyword)cCumul_carte_couleurAssignment_2.eContents().get(0);
		private final Assignment cCumul_carte_unoAssignment_3 = (Assignment)cUnorderedGroup.eContents().get(3);
		private final Keyword cCumul_carte_unoCumul_carte_unoKeyword_3_0 = (Keyword)cCumul_carte_unoAssignment_3.eContents().get(0);
		
		//Cumul:
		//	cumul_plus_2='cumul_plus_2'?
		//	& cumul_plus_4='cumul_plus_4'?
		//	& cumul_carte_couleur='cumul_carte_couleur'?
		//	& cumul_carte_uno='cumul_carte_uno'?;
		@Override public ParserRule getRule() { return rule; }
		
		//cumul_plus_2='cumul_plus_2'? & cumul_plus_4='cumul_plus_4'? & cumul_carte_couleur='cumul_carte_couleur'? &
		//cumul_carte_uno='cumul_carte_uno'?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//cumul_plus_2='cumul_plus_2'?
		public Assignment getCumul_plus_2Assignment_0() { return cCumul_plus_2Assignment_0; }
		
		//'cumul_plus_2'
		public Keyword getCumul_plus_2Cumul_plus_2Keyword_0_0() { return cCumul_plus_2Cumul_plus_2Keyword_0_0; }
		
		//cumul_plus_4='cumul_plus_4'?
		public Assignment getCumul_plus_4Assignment_1() { return cCumul_plus_4Assignment_1; }
		
		//'cumul_plus_4'
		public Keyword getCumul_plus_4Cumul_plus_4Keyword_1_0() { return cCumul_plus_4Cumul_plus_4Keyword_1_0; }
		
		//cumul_carte_couleur='cumul_carte_couleur'?
		public Assignment getCumul_carte_couleurAssignment_2() { return cCumul_carte_couleurAssignment_2; }
		
		//'cumul_carte_couleur'
		public Keyword getCumul_carte_couleurCumul_carte_couleurKeyword_2_0() { return cCumul_carte_couleurCumul_carte_couleurKeyword_2_0; }
		
		//cumul_carte_uno='cumul_carte_uno'?
		public Assignment getCumul_carte_unoAssignment_3() { return cCumul_carte_unoAssignment_3; }
		
		//'cumul_carte_uno'
		public Keyword getCumul_carte_unoCumul_carte_unoKeyword_3_0() { return cCumul_carte_unoCumul_carte_unoKeyword_3_0; }
	}
	public class ContestationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Contestations");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cInter_contestableAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final Keyword cInter_contestableInter_contestableKeyword_0_0 = (Keyword)cInter_contestableAssignment_0.eContents().get(0);
		private final Assignment cPlus4_contestableAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Keyword cPlus4_contestablePlus4_contestableKeyword_1_0 = (Keyword)cPlus4_contestableAssignment_1.eContents().get(0);
		
		//Contestations:
		//	inter_contestable='inter_contestable'?
		//	& plus4_contestable='plus4_contestable'?;
		@Override public ParserRule getRule() { return rule; }
		
		//inter_contestable='inter_contestable'? & plus4_contestable='plus4_contestable'?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//inter_contestable='inter_contestable'?
		public Assignment getInter_contestableAssignment_0() { return cInter_contestableAssignment_0; }
		
		//'inter_contestable'
		public Keyword getInter_contestableInter_contestableKeyword_0_0() { return cInter_contestableInter_contestableKeyword_0_0; }
		
		//plus4_contestable='plus4_contestable'?
		public Assignment getPlus4_contestableAssignment_1() { return cPlus4_contestableAssignment_1; }
		
		//'plus4_contestable'
		public Keyword getPlus4_contestablePlus4_contestableKeyword_1_0() { return cPlus4_contestablePlus4_contestableKeyword_1_0; }
	}
	public class Fin_MancheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Fin_Manche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFin_mancheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDire_uno_obligatoireAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cDire_uno_obligatoireDire_uno_obligatoireKeyword_2_0 = (Keyword)cDire_uno_obligatoireAssignment_2.eContents().get(0);
		private final Assignment cPoints_mancheAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPoints_manchePoints_mancheParserRuleCall_3_0 = (RuleCall)cPoints_mancheAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		////=======Fin_Manche=======
		//Fin_Manche:
		//	'Fin_manche' ':'
		//	dire_uno_obligatoire='dire_uno_obligatoire'?
		//	points_manche=Points_manche
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Fin_manche' ':' dire_uno_obligatoire='dire_uno_obligatoire'? points_manche=Points_manche ';'
		public Group getGroup() { return cGroup; }
		
		//'Fin_manche'
		public Keyword getFin_mancheKeyword_0() { return cFin_mancheKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//dire_uno_obligatoire='dire_uno_obligatoire'?
		public Assignment getDire_uno_obligatoireAssignment_2() { return cDire_uno_obligatoireAssignment_2; }
		
		//'dire_uno_obligatoire'
		public Keyword getDire_uno_obligatoireDire_uno_obligatoireKeyword_2_0() { return cDire_uno_obligatoireDire_uno_obligatoireKeyword_2_0; }
		
		//points_manche=Points_manche
		public Assignment getPoints_mancheAssignment_3() { return cPoints_mancheAssignment_3; }
		
		//Points_manche
		public RuleCall getPoints_manchePoints_mancheParserRuleCall_3_0() { return cPoints_manchePoints_mancheParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class Points_mancheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Points_manche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPoints_mancheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVainqueur_mancheKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVainqueur_mancheAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVainqueur_mancheVainqueur_mancheEnumRuleCall_3_0 = (RuleCall)cVainqueur_mancheAssignment_3.eContents().get(0);
		private final Keyword cPerdants_mancheKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPerdants_mancheAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPerdants_manchePerdants_mancheParserRuleCall_5_0 = (RuleCall)cPerdants_mancheAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Points_manche:
		//	'Points_manche' '('
		//	'vainqueur_manche:' vainqueur_manche=Vainqueur_manche
		//	'perdants_manche:' perdants_manche=Perdants_manche
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'Points_manche' '(' 'vainqueur_manche:' vainqueur_manche=Vainqueur_manche 'perdants_manche:'
		//perdants_manche=Perdants_manche ')'
		public Group getGroup() { return cGroup; }
		
		//'Points_manche'
		public Keyword getPoints_mancheKeyword_0() { return cPoints_mancheKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'vainqueur_manche:'
		public Keyword getVainqueur_mancheKeyword_2() { return cVainqueur_mancheKeyword_2; }
		
		//vainqueur_manche=Vainqueur_manche
		public Assignment getVainqueur_mancheAssignment_3() { return cVainqueur_mancheAssignment_3; }
		
		//Vainqueur_manche
		public RuleCall getVainqueur_mancheVainqueur_mancheEnumRuleCall_3_0() { return cVainqueur_mancheVainqueur_mancheEnumRuleCall_3_0; }
		
		//'perdants_manche:'
		public Keyword getPerdants_mancheKeyword_4() { return cPerdants_mancheKeyword_4; }
		
		//perdants_manche=Perdants_manche
		public Assignment getPerdants_mancheAssignment_5() { return cPerdants_mancheAssignment_5; }
		
		//Perdants_manche
		public RuleCall getPerdants_manchePerdants_mancheParserRuleCall_5_0() { return cPerdants_manchePerdants_mancheParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class Perdants_mancheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Perdants_manche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPerdants_mancheAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPm_zero_ptsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPm_zero_ptsPm_zero_ptsKeyword_1_0 = (Keyword)cPm_zero_ptsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cPm_pts_selon_cartes_restantesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cPm_pts_selon_cartes_restantesPm_pts_selon_cartes_restantesKeyword_2_0_0 = (Keyword)cPm_pts_selon_cartes_restantesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cElimination_si_500_ptsKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		
		//Perdants_manche:
		//	{Perdants_manche} pm_zero_pts='pm_zero_pts'? (pm_pts_selon_cartes_restantes='pm_pts_selon_cartes_restantes' ('{'
		//	'elimination_si_500_pts' '}')?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Perdants_manche} pm_zero_pts='pm_zero_pts'? (pm_pts_selon_cartes_restantes='pm_pts_selon_cartes_restantes' ('{'
		//'elimination_si_500_pts' '}')?)?
		public Group getGroup() { return cGroup; }
		
		//{Perdants_manche}
		public Action getPerdants_mancheAction_0() { return cPerdants_mancheAction_0; }
		
		//pm_zero_pts='pm_zero_pts'?
		public Assignment getPm_zero_ptsAssignment_1() { return cPm_zero_ptsAssignment_1; }
		
		//'pm_zero_pts'
		public Keyword getPm_zero_ptsPm_zero_ptsKeyword_1_0() { return cPm_zero_ptsPm_zero_ptsKeyword_1_0; }
		
		//(pm_pts_selon_cartes_restantes='pm_pts_selon_cartes_restantes' ('{' 'elimination_si_500_pts' '}')?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//pm_pts_selon_cartes_restantes='pm_pts_selon_cartes_restantes'
		public Assignment getPm_pts_selon_cartes_restantesAssignment_2_0() { return cPm_pts_selon_cartes_restantesAssignment_2_0; }
		
		//'pm_pts_selon_cartes_restantes'
		public Keyword getPm_pts_selon_cartes_restantesPm_pts_selon_cartes_restantesKeyword_2_0_0() { return cPm_pts_selon_cartes_restantesPm_pts_selon_cartes_restantesKeyword_2_0_0; }
		
		//('{' 'elimination_si_500_pts' '}')?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }
		
		//'elimination_si_500_pts'
		public Keyword getElimination_si_500_ptsKeyword_2_1_1() { return cElimination_si_500_ptsKeyword_2_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_2() { return cRightCurlyBracketKeyword_2_1_2; }
	}
	public class Fin_PartieElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Fin_Partie");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFin_PartieKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVainqueur_totalKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVainqueur_totalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVainqueur_totalVainqueur_totalEnumRuleCall_4_0 = (RuleCall)cVainqueur_totalAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		////=======Fin_Partie=======
		//Fin_Partie:
		//	'Fin_Partie' ':'
		//	'vainqueur_total' '(' vainqueur_total=Vainqueur_total ')'
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Fin_Partie' ':' 'vainqueur_total' '(' vainqueur_total=Vainqueur_total ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'Fin_Partie'
		public Keyword getFin_PartieKeyword_0() { return cFin_PartieKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'vainqueur_total'
		public Keyword getVainqueur_totalKeyword_2() { return cVainqueur_totalKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//vainqueur_total=Vainqueur_total
		public Assignment getVainqueur_totalAssignment_4() { return cVainqueur_totalAssignment_4; }
		
		//Vainqueur_total
		public RuleCall getVainqueur_totalVainqueur_totalEnumRuleCall_4_0() { return cVainqueur_totalVainqueur_totalEnumRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	
	public class Etat_MainElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Etat_Main");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCacheeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCacheeCacheeKeyword_1_0 = (Keyword)cCacheeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Etat_Main:
		//	visible | cachee;
		public EnumRule getRule() { return rule; }
		
		//visible | cachee
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//cachee
		public EnumLiteralDeclaration getCacheeEnumLiteralDeclaration_1() { return cCacheeEnumLiteralDeclaration_1; }
		
		//'cachee'
		public Keyword getCacheeCacheeKeyword_1_0() { return cCacheeCacheeKeyword_1_0; }
	}
	public class Nb_MainsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Nb_Mains");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUne_mainEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUne_main1Keyword_0_0 = (Keyword)cUne_mainEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTrois_mainsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTrois_mains3Keyword_1_0 = (Keyword)cTrois_mainsEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Nb_Mains:
		//	une_main='1' | trois_mains='3';
		public EnumRule getRule() { return rule; }
		
		//une_main='1' | trois_mains='3'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//une_main='1'
		public EnumLiteralDeclaration getUne_mainEnumLiteralDeclaration_0() { return cUne_mainEnumLiteralDeclaration_0; }
		
		//'1'
		public Keyword getUne_main1Keyword_0_0() { return cUne_main1Keyword_0_0; }
		
		//trois_mains='3'
		public EnumLiteralDeclaration getTrois_mainsEnumLiteralDeclaration_1() { return cTrois_mainsEnumLiteralDeclaration_1; }
		
		//'3'
		public Keyword getTrois_mains3Keyword_1_0() { return cTrois_mains3Keyword_1_0; }
	}
	public class Nb_Cartes_MainsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Nb_Cartes_Mains");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSept_cartesEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSept_cartes7Keyword_0_0 = (Keyword)cSept_cartesEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cQuatre_cartesEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cQuatre_cartes4Keyword_1_0 = (Keyword)cQuatre_cartesEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCinq_cartesEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCinq_cartes5Keyword_2_0 = (Keyword)cCinq_cartesEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Nb_Cartes_Mains:
		//	sept_cartes='7' | quatre_cartes='4' | cinq_cartes='5';
		public EnumRule getRule() { return rule; }
		
		//sept_cartes='7' | quatre_cartes='4' | cinq_cartes='5'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//sept_cartes='7'
		public EnumLiteralDeclaration getSept_cartesEnumLiteralDeclaration_0() { return cSept_cartesEnumLiteralDeclaration_0; }
		
		//'7'
		public Keyword getSept_cartes7Keyword_0_0() { return cSept_cartes7Keyword_0_0; }
		
		//quatre_cartes='4'
		public EnumLiteralDeclaration getQuatre_cartesEnumLiteralDeclaration_1() { return cQuatre_cartesEnumLiteralDeclaration_1; }
		
		//'4'
		public Keyword getQuatre_cartes4Keyword_1_0() { return cQuatre_cartes4Keyword_1_0; }
		
		//cinq_cartes='5'
		public EnumLiteralDeclaration getCinq_cartesEnumLiteralDeclaration_2() { return cCinq_cartesEnumLiteralDeclaration_2; }
		
		//'5'
		public Keyword getCinq_cartes5Keyword_2_0() { return cCinq_cartes5Keyword_2_0; }
	}
	public class Nb_TalonsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Nb_Talons");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUn_talonEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUn_talon1Keyword_0_0 = (Keyword)cUn_talonEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTrois_talonsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTrois_talons3Keyword_1_0 = (Keyword)cTrois_talonsEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Nb_Talons:
		//	un_talon='1' | trois_talons='3';
		public EnumRule getRule() { return rule; }
		
		//un_talon='1' | trois_talons='3'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//un_talon='1'
		public EnumLiteralDeclaration getUn_talonEnumLiteralDeclaration_0() { return cUn_talonEnumLiteralDeclaration_0; }
		
		//'1'
		public Keyword getUn_talon1Keyword_0_0() { return cUn_talon1Keyword_0_0; }
		
		//trois_talons='3'
		public EnumLiteralDeclaration getTrois_talonsEnumLiteralDeclaration_1() { return cTrois_talonsEnumLiteralDeclaration_1; }
		
		//'3'
		public Keyword getTrois_talons3Keyword_1_0() { return cTrois_talons3Keyword_1_0; }
	}
	public class Nb_cartes_jouablesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Nb_cartes_jouables");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUne_par_uneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUne_par_uneUne_par_uneKeyword_0_0 = (Keyword)cUne_par_uneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPlusieurs_a_la_fois_autoriseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPlusieurs_a_la_fois_autorisePlusieurs_a_la_fois_autoriseKeyword_1_0 = (Keyword)cPlusieurs_a_la_fois_autoriseEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Nb_cartes_jouables:
		//	une_par_une | plusieurs_a_la_fois_autorise;
		public EnumRule getRule() { return rule; }
		
		//une_par_une | plusieurs_a_la_fois_autorise
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//une_par_une
		public EnumLiteralDeclaration getUne_par_uneEnumLiteralDeclaration_0() { return cUne_par_uneEnumLiteralDeclaration_0; }
		
		//'une_par_une'
		public Keyword getUne_par_uneUne_par_uneKeyword_0_0() { return cUne_par_uneUne_par_uneKeyword_0_0; }
		
		//plusieurs_a_la_fois_autorise
		public EnumLiteralDeclaration getPlusieurs_a_la_fois_autoriseEnumLiteralDeclaration_1() { return cPlusieurs_a_la_fois_autoriseEnumLiteralDeclaration_1; }
		
		//'plusieurs_a_la_fois_autorise'
		public Keyword getPlusieurs_a_la_fois_autorisePlusieurs_a_la_fois_autoriseKeyword_1_0() { return cPlusieurs_a_la_fois_autorisePlusieurs_a_la_fois_autoriseKeyword_1_0; }
	}
	public class InterceptionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Interception");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMm_nbEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMm_nbMm_nbKeyword_0_0 = (Keyword)cMm_nbEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMm_couleurEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMm_couleurMm_couleurKeyword_1_0 = (Keyword)cMm_couleurEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMm_nb_couleurEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMm_nb_couleurMm_nb_couleurKeyword_2_0 = (Keyword)cMm_nb_couleurEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Interception:
		//	mm_nb | mm_couleur | mm_nb_couleur;
		public EnumRule getRule() { return rule; }
		
		//mm_nb | mm_couleur | mm_nb_couleur
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//mm_nb
		public EnumLiteralDeclaration getMm_nbEnumLiteralDeclaration_0() { return cMm_nbEnumLiteralDeclaration_0; }
		
		//'mm_nb'
		public Keyword getMm_nbMm_nbKeyword_0_0() { return cMm_nbMm_nbKeyword_0_0; }
		
		//mm_couleur
		public EnumLiteralDeclaration getMm_couleurEnumLiteralDeclaration_1() { return cMm_couleurEnumLiteralDeclaration_1; }
		
		//'mm_couleur'
		public Keyword getMm_couleurMm_couleurKeyword_1_0() { return cMm_couleurMm_couleurKeyword_1_0; }
		
		//mm_nb_couleur
		public EnumLiteralDeclaration getMm_nb_couleurEnumLiteralDeclaration_2() { return cMm_nb_couleurEnumLiteralDeclaration_2; }
		
		//'mm_nb_couleur'
		public Keyword getMm_nb_couleurMm_nb_couleurKeyword_2_0() { return cMm_nb_couleurMm_nb_couleurKeyword_2_0; }
	}
	public class Nb_cartes_a_piocherElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Nb_cartes_a_piocher");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUne_seuleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUne_seuleUne_seuleKeyword_0_0 = (Keyword)cUne_seuleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAu_plus_troisEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAu_plus_troisAu_plus_troisKeyword_1_0 = (Keyword)cAu_plus_troisEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Nb_cartes_a_piocher:
		//	une_seule | au_plus_trois;
		public EnumRule getRule() { return rule; }
		
		//une_seule | au_plus_trois
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//une_seule
		public EnumLiteralDeclaration getUne_seuleEnumLiteralDeclaration_0() { return cUne_seuleEnumLiteralDeclaration_0; }
		
		//'une_seule'
		public Keyword getUne_seuleUne_seuleKeyword_0_0() { return cUne_seuleUne_seuleKeyword_0_0; }
		
		//au_plus_trois
		public EnumLiteralDeclaration getAu_plus_troisEnumLiteralDeclaration_1() { return cAu_plus_troisEnumLiteralDeclaration_1; }
		
		//'au_plus_trois'
		public Keyword getAu_plus_troisAu_plus_troisKeyword_1_0() { return cAu_plus_troisAu_plus_troisKeyword_1_0; }
	}
	public class Jouer_apres_piocheElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Jouer_apres_pioche");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDroit_de_jouerEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDroit_de_jouerDroit_de_jouerKeyword_0_0 = (Keyword)cDroit_de_jouerEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPas_droit_de_jouerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPas_droit_de_jouerPas_droit_de_jouerKeyword_1_0 = (Keyword)cPas_droit_de_jouerEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Jouer_apres_pioche:
		//	droit_de_jouer | pas_droit_de_jouer;
		public EnumRule getRule() { return rule; }
		
		//droit_de_jouer | pas_droit_de_jouer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//droit_de_jouer
		public EnumLiteralDeclaration getDroit_de_jouerEnumLiteralDeclaration_0() { return cDroit_de_jouerEnumLiteralDeclaration_0; }
		
		//'droit_de_jouer'
		public Keyword getDroit_de_jouerDroit_de_jouerKeyword_0_0() { return cDroit_de_jouerDroit_de_jouerKeyword_0_0; }
		
		//pas_droit_de_jouer
		public EnumLiteralDeclaration getPas_droit_de_jouerEnumLiteralDeclaration_1() { return cPas_droit_de_jouerEnumLiteralDeclaration_1; }
		
		//'pas_droit_de_jouer'
		public Keyword getPas_droit_de_jouerPas_droit_de_jouerKeyword_1_0() { return cPas_droit_de_jouerPas_droit_de_jouerKeyword_1_0; }
	}
	public class Vainqueur_mancheElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Vainqueur_manche");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cManche_gagneeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cManche_gagneeManche_gagneeKeyword_0_0 = (Keyword)cManche_gagneeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVm_pts_selon_carte_adversairesEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVm_pts_selon_carte_adversairesVm_pts_selon_carte_adversairesKeyword_1_0 = (Keyword)cVm_pts_selon_carte_adversairesEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVm_zero_ptsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVm_zero_ptsVm_zero_ptsKeyword_2_0 = (Keyword)cVm_zero_ptsEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Vainqueur_manche:
		//	manche_gagnee | vm_pts_selon_carte_adversaires | vm_zero_pts;
		public EnumRule getRule() { return rule; }
		
		//manche_gagnee | vm_pts_selon_carte_adversaires | vm_zero_pts
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//manche_gagnee
		public EnumLiteralDeclaration getManche_gagneeEnumLiteralDeclaration_0() { return cManche_gagneeEnumLiteralDeclaration_0; }
		
		//'manche_gagnee'
		public Keyword getManche_gagneeManche_gagneeKeyword_0_0() { return cManche_gagneeManche_gagneeKeyword_0_0; }
		
		//vm_pts_selon_carte_adversaires
		public EnumLiteralDeclaration getVm_pts_selon_carte_adversairesEnumLiteralDeclaration_1() { return cVm_pts_selon_carte_adversairesEnumLiteralDeclaration_1; }
		
		//'vm_pts_selon_carte_adversaires'
		public Keyword getVm_pts_selon_carte_adversairesVm_pts_selon_carte_adversairesKeyword_1_0() { return cVm_pts_selon_carte_adversairesVm_pts_selon_carte_adversairesKeyword_1_0; }
		
		//vm_zero_pts
		public EnumLiteralDeclaration getVm_zero_ptsEnumLiteralDeclaration_2() { return cVm_zero_ptsEnumLiteralDeclaration_2; }
		
		//'vm_zero_pts'
		public Keyword getVm_zero_ptsVm_zero_ptsKeyword_2_0() { return cVm_zero_ptsVm_zero_ptsKeyword_2_0; }
	}
	public class Vainqueur_totalElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtexthheinle.uno.MyUno.Vainqueur_total");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cScore_le_plus_grdEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cScore_le_plus_grdScore_le_plus_grdKeyword_0_0 = (Keyword)cScore_le_plus_grdEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNb_manches_gagneesEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNb_manches_gagneesNb_manches_gagneesKeyword_1_0 = (Keyword)cNb_manches_gagneesEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMoins_de_500_ptsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMoins_de_500_ptsMoins_de_500_ptsKeyword_2_0 = (Keyword)cMoins_de_500_ptsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cScore_le_plus_petitEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cScore_le_plus_petitScore_le_plus_petitKeyword_3_0 = (Keyword)cScore_le_plus_petitEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Vainqueur_total:
		//	score_le_plus_grd | nb_manches_gagnees | moins_de_500_pts | score_le_plus_petit;
		public EnumRule getRule() { return rule; }
		
		//score_le_plus_grd | nb_manches_gagnees | moins_de_500_pts | score_le_plus_petit
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//score_le_plus_grd
		public EnumLiteralDeclaration getScore_le_plus_grdEnumLiteralDeclaration_0() { return cScore_le_plus_grdEnumLiteralDeclaration_0; }
		
		//'score_le_plus_grd'
		public Keyword getScore_le_plus_grdScore_le_plus_grdKeyword_0_0() { return cScore_le_plus_grdScore_le_plus_grdKeyword_0_0; }
		
		//nb_manches_gagnees
		public EnumLiteralDeclaration getNb_manches_gagneesEnumLiteralDeclaration_1() { return cNb_manches_gagneesEnumLiteralDeclaration_1; }
		
		//'nb_manches_gagnees'
		public Keyword getNb_manches_gagneesNb_manches_gagneesKeyword_1_0() { return cNb_manches_gagneesNb_manches_gagneesKeyword_1_0; }
		
		//moins_de_500_pts
		public EnumLiteralDeclaration getMoins_de_500_ptsEnumLiteralDeclaration_2() { return cMoins_de_500_ptsEnumLiteralDeclaration_2; }
		
		//'moins_de_500_pts'
		public Keyword getMoins_de_500_ptsMoins_de_500_ptsKeyword_2_0() { return cMoins_de_500_ptsMoins_de_500_ptsKeyword_2_0; }
		
		//score_le_plus_petit
		public EnumLiteralDeclaration getScore_le_plus_petitEnumLiteralDeclaration_3() { return cScore_le_plus_petitEnumLiteralDeclaration_3; }
		
		//'score_le_plus_petit'
		public Keyword getScore_le_plus_petitScore_le_plus_petitKeyword_3_0() { return cScore_le_plus_petitScore_le_plus_petitKeyword_3_0; }
	}
	
	private final Variante_UNOElements pVariante_UNO;
	private final Configuration_DepartElements pConfiguration_Depart;
	private final MainElements pMain;
	private final Etat_MainElements eEtat_Main;
	private final Nb_MainsElements eNb_Mains;
	private final Nb_Cartes_MainsElements eNb_Cartes_Mains;
	private final TalonElements pTalon;
	private final Nb_TalonsElements eNb_Talons;
	private final MancheElements pManche;
	private final InversionElements pInversion;
	private final Tourner_les_mainsElements pTourner_les_mains;
	private final Nb_cartes_jouablesElements eNb_cartes_jouables;
	private final Cartes_1_9Elements pCartes_1_9;
	private final InterceptionElements eInterception;
	private final PiocheElements pPioche;
	private final Nb_cartes_a_piocherElements eNb_cartes_a_piocher;
	private final Jouer_apres_piocheElements eJouer_apres_pioche;
	private final CumulElements pCumul;
	private final ContestationsElements pContestations;
	private final Fin_MancheElements pFin_Manche;
	private final Points_mancheElements pPoints_manche;
	private final Vainqueur_mancheElements eVainqueur_manche;
	private final Perdants_mancheElements pPerdants_manche;
	private final Fin_PartieElements pFin_Partie;
	private final Vainqueur_totalElements eVainqueur_total;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyUnoGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pVariante_UNO = new Variante_UNOElements();
		this.pConfiguration_Depart = new Configuration_DepartElements();
		this.pMain = new MainElements();
		this.eEtat_Main = new Etat_MainElements();
		this.eNb_Mains = new Nb_MainsElements();
		this.eNb_Cartes_Mains = new Nb_Cartes_MainsElements();
		this.pTalon = new TalonElements();
		this.eNb_Talons = new Nb_TalonsElements();
		this.pManche = new MancheElements();
		this.pInversion = new InversionElements();
		this.pTourner_les_mains = new Tourner_les_mainsElements();
		this.eNb_cartes_jouables = new Nb_cartes_jouablesElements();
		this.pCartes_1_9 = new Cartes_1_9Elements();
		this.eInterception = new InterceptionElements();
		this.pPioche = new PiocheElements();
		this.eNb_cartes_a_piocher = new Nb_cartes_a_piocherElements();
		this.eJouer_apres_pioche = new Jouer_apres_piocheElements();
		this.pCumul = new CumulElements();
		this.pContestations = new ContestationsElements();
		this.pFin_Manche = new Fin_MancheElements();
		this.pPoints_manche = new Points_mancheElements();
		this.eVainqueur_manche = new Vainqueur_mancheElements();
		this.pPerdants_manche = new Perdants_mancheElements();
		this.pFin_Partie = new Fin_PartieElements();
		this.eVainqueur_total = new Vainqueur_totalElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtexthheinle.uno.MyUno".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Variante_UNO:
	//	'nom_variante' name=STRING
	//	'{'
	//	configuration_depart=Configuration_Depart
	//	manche=Manche
	//	fin_manche=Fin_Manche
	//	fin_partie=Fin_Partie
	//	'}';
	public Variante_UNOElements getVariante_UNOAccess() {
		return pVariante_UNO;
	}
	
	public ParserRule getVariante_UNORule() {
		return getVariante_UNOAccess().getRule();
	}
	
	////=======Configuration_Depart=======
	//Configuration_Depart:
	//	'Depart' ':'
	//	main=Main
	//	talon=Talon
	//	riviere='riviere'? (temps_limite='temps_limite:' secondes=INT)?
	//	';';
	public Configuration_DepartElements getConfiguration_DepartAccess() {
		return pConfiguration_Depart;
	}
	
	public ParserRule getConfiguration_DepartRule() {
		return getConfiguration_DepartAccess().getRule();
	}
	
	//Main:
	//	'etat_main' ':' etat_main=Etat_Main
	//	'nb_mains' ':' nb_mains=Nb_Mains
	//	'nb_cartes_main' ':' nb_cartes_mains=Nb_Cartes_Mains;
	public MainElements getMainAccess() {
		return pMain;
	}
	
	public ParserRule getMainRule() {
		return getMainAccess().getRule();
	}
	
	//enum Etat_Main:
	//	visible | cachee;
	public Etat_MainElements getEtat_MainAccess() {
		return eEtat_Main;
	}
	
	public EnumRule getEtat_MainRule() {
		return getEtat_MainAccess().getRule();
	}
	
	//enum Nb_Mains:
	//	une_main='1' | trois_mains='3';
	public Nb_MainsElements getNb_MainsAccess() {
		return eNb_Mains;
	}
	
	public EnumRule getNb_MainsRule() {
		return getNb_MainsAccess().getRule();
	}
	
	//enum Nb_Cartes_Mains:
	//	sept_cartes='7' | quatre_cartes='4' | cinq_cartes='5';
	public Nb_Cartes_MainsElements getNb_Cartes_MainsAccess() {
		return eNb_Cartes_Mains;
	}
	
	public EnumRule getNb_Cartes_MainsRule() {
		return getNb_Cartes_MainsAccess().getRule();
	}
	
	//Talon:
	//	'nb_talons' ':' nb_talons=Nb_Talons;
	public TalonElements getTalonAccess() {
		return pTalon;
	}
	
	public ParserRule getTalonRule() {
		return getTalonAccess().getRule();
	}
	
	//enum Nb_Talons:
	//	un_talon='1' | trois_talons='3';
	public Nb_TalonsElements getNb_TalonsAccess() {
		return eNb_Talons;
	}
	
	public EnumRule getNb_TalonsRule() {
		return getNb_TalonsAccess().getRule();
	}
	
	////=======Manche=======
	//Manche:
	//	'Manche' ':' ('Inversion' '(' inversion=Inversion ')')? ('Tourner_mains' '(' tourner_les_mains=Tourner_les_mains
	//	')')?
	//	'Nb_cartes_jouables' '(' nb_cartes_jouables=Nb_cartes_jouables ')' ('Cartes_1_a_9' '(' cartes_1_9=Cartes_1_9 ')')?
	//	pioche=Pioche ('Cumul' '(' cumul=Cumul ')')? ('Contestations' '(' contestations=Contestations ')')?
	//	';';
	public MancheElements getMancheAccess() {
		return pManche;
	}
	
	public ParserRule getMancheRule() {
		return getMancheAccess().getRule();
	}
	
	//Inversion:
	//	avec_carte_inversion='avec_carte_inversion'?
	//	& avec_carte_sept='avec_carte_sept'?;
	public InversionElements getInversionAccess() {
		return pInversion;
	}
	
	public ParserRule getInversionRule() {
		return getInversionAccess().getRule();
	}
	
	//Tourner_les_mains:
	//	avec_carte_zero='avec_carte_zero'?
	//	& avec_carte_uno='avec_carte_uno'?;
	public Tourner_les_mainsElements getTourner_les_mainsAccess() {
		return pTourner_les_mains;
	}
	
	public ParserRule getTourner_les_mainsRule() {
		return getTourner_les_mainsAccess().getRule();
	}
	
	//enum Nb_cartes_jouables:
	//	une_par_une | plusieurs_a_la_fois_autorise;
	public Nb_cartes_jouablesElements getNb_cartes_jouablesAccess() {
		return eNb_cartes_jouables;
	}
	
	public EnumRule getNb_cartes_jouablesRule() {
		return getNb_cartes_jouablesAccess().getRule();
	}
	
	//Cartes_1_9:
	//	suites='suites'?
	//	& suites_royales='suites_royales'?
	//	& ('interception' '{' interception=Interception '}')?;
	public Cartes_1_9Elements getCartes_1_9Access() {
		return pCartes_1_9;
	}
	
	public ParserRule getCartes_1_9Rule() {
		return getCartes_1_9Access().getRule();
	}
	
	//enum Interception:
	//	mm_nb | mm_couleur | mm_nb_couleur;
	public InterceptionElements getInterceptionAccess() {
		return eInterception;
	}
	
	public EnumRule getInterceptionRule() {
		return getInterceptionAccess().getRule();
	}
	
	//Pioche:
	//	'Pioche' '('
	//	'nb_cartes_a_piocher:' nb_cartes_a_piocher=Nb_cartes_a_piocher
	//	'jouer_apres_pioche:' jouer_apres_pioche=Jouer_apres_pioche
	//	')';
	public PiocheElements getPiocheAccess() {
		return pPioche;
	}
	
	public ParserRule getPiocheRule() {
		return getPiocheAccess().getRule();
	}
	
	//enum Nb_cartes_a_piocher:
	//	une_seule | au_plus_trois;
	public Nb_cartes_a_piocherElements getNb_cartes_a_piocherAccess() {
		return eNb_cartes_a_piocher;
	}
	
	public EnumRule getNb_cartes_a_piocherRule() {
		return getNb_cartes_a_piocherAccess().getRule();
	}
	
	//enum Jouer_apres_pioche:
	//	droit_de_jouer | pas_droit_de_jouer;
	public Jouer_apres_piocheElements getJouer_apres_piocheAccess() {
		return eJouer_apres_pioche;
	}
	
	public EnumRule getJouer_apres_piocheRule() {
		return getJouer_apres_piocheAccess().getRule();
	}
	
	//Cumul:
	//	cumul_plus_2='cumul_plus_2'?
	//	& cumul_plus_4='cumul_plus_4'?
	//	& cumul_carte_couleur='cumul_carte_couleur'?
	//	& cumul_carte_uno='cumul_carte_uno'?;
	public CumulElements getCumulAccess() {
		return pCumul;
	}
	
	public ParserRule getCumulRule() {
		return getCumulAccess().getRule();
	}
	
	//Contestations:
	//	inter_contestable='inter_contestable'?
	//	& plus4_contestable='plus4_contestable'?;
	public ContestationsElements getContestationsAccess() {
		return pContestations;
	}
	
	public ParserRule getContestationsRule() {
		return getContestationsAccess().getRule();
	}
	
	////=======Fin_Manche=======
	//Fin_Manche:
	//	'Fin_manche' ':'
	//	dire_uno_obligatoire='dire_uno_obligatoire'?
	//	points_manche=Points_manche
	//	';';
	public Fin_MancheElements getFin_MancheAccess() {
		return pFin_Manche;
	}
	
	public ParserRule getFin_MancheRule() {
		return getFin_MancheAccess().getRule();
	}
	
	//Points_manche:
	//	'Points_manche' '('
	//	'vainqueur_manche:' vainqueur_manche=Vainqueur_manche
	//	'perdants_manche:' perdants_manche=Perdants_manche
	//	')';
	public Points_mancheElements getPoints_mancheAccess() {
		return pPoints_manche;
	}
	
	public ParserRule getPoints_mancheRule() {
		return getPoints_mancheAccess().getRule();
	}
	
	//enum Vainqueur_manche:
	//	manche_gagnee | vm_pts_selon_carte_adversaires | vm_zero_pts;
	public Vainqueur_mancheElements getVainqueur_mancheAccess() {
		return eVainqueur_manche;
	}
	
	public EnumRule getVainqueur_mancheRule() {
		return getVainqueur_mancheAccess().getRule();
	}
	
	//Perdants_manche:
	//	{Perdants_manche} pm_zero_pts='pm_zero_pts'? (pm_pts_selon_cartes_restantes='pm_pts_selon_cartes_restantes' ('{'
	//	'elimination_si_500_pts' '}')?)?;
	public Perdants_mancheElements getPerdants_mancheAccess() {
		return pPerdants_manche;
	}
	
	public ParserRule getPerdants_mancheRule() {
		return getPerdants_mancheAccess().getRule();
	}
	
	////=======Fin_Partie=======
	//Fin_Partie:
	//	'Fin_Partie' ':'
	//	'vainqueur_total' '(' vainqueur_total=Vainqueur_total ')'
	//	';';
	public Fin_PartieElements getFin_PartieAccess() {
		return pFin_Partie;
	}
	
	public ParserRule getFin_PartieRule() {
		return getFin_PartieAccess().getRule();
	}
	
	//enum Vainqueur_total:
	//	score_le_plus_grd | nb_manches_gagnees | moins_de_500_pts | score_le_plus_petit;
	public Vainqueur_totalElements getVainqueur_totalAccess() {
		return eVainqueur_total;
	}
	
	public EnumRule getVainqueur_totalRule() {
		return getVainqueur_totalAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
